#!/bin/sh
### BEGIN INIT INFO
# Provides:          prometheus
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Prometheus monitoring system and time series database
### END INIT INFO

NAME=prometheus
DAEMON=/usr/bin/prometheus
PIDFILE=/var/run/$NAME/$NAME.pid
LOGFILE=/tmp/$NAME.log
USER=prometheus
GROUP=prometheus

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

start() {
    echo "Starting $NAME"
    mkdir -p /var/run/$NAME
    chown $USER:$GROUP /var/run/$NAME
    touch $LOGFILE
    chown $USER:$GROUP $LOGFILE
    start-stop-daemon --start --quiet --pidfile $PIDFILE --make-pidfile --chuid $USER:$GROUP --background --exec /bin/sh -- -c "exec $DAEMON $ARGS 2>&1 | tee -a $LOGFILE"
    echo "$NAME started"
}

stop() {
    echo "Stopping $NAME"
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        # Find all child processes of the shell process
        PIDS="$PID $(pgrep -P $PID)"
        
        # Send SIGTERM to all processes
        for pid in $PIDS; do
            kill -TERM $pid 2>/dev/null
        done
        
        # Send SIGKILL to any remaining processes
        for pid in $PIDS; do
            kill -KILL $pid 2>/dev/null
        done
        
        rm -f $PIDFILE
    else
        echo "$PIDFILE not found, $NAME may not be running"
    fi
    echo "$NAME stopped"
}

status() {
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        if kill -0 $PID > /dev/null 2>&1; then
            echo "$NAME is running (PID: $PID)"
            return 0
        else
            echo "$NAME is not running (stale PID file)"
            return 1
        fi
    else
        echo "$NAME is not running"
        return 3
    fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
