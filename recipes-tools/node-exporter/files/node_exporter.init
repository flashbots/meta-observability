#!/bin/sh
### BEGIN INIT INFO
# Provides:          node_exporter
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Prometheus Node Exporter
### END INIT INFO

# Set default values
NAME="node_exporter"
DAEMON="/usr/bin/node_exporter"
USER="node_exporter"
GROUP="node_exporter"
PIDFILE="/var/run/node_exporter.pid"
LOGFILE="/tmp/node_exporter.log"
DAEMON_ARGS=""

# Read configuration variable file if it is present
[ -r /etc/default/node_exporter ] && . /etc/default/node_exporter

start() {
    if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE) 2>/dev/null; then
        echo "$NAME is already running"
        return 1
    fi
    echo "Starting $NAMEâ€¦"
    start-stop-daemon --start --quiet --background \
        --make-pidfile --pidfile $PIDFILE \
        --chuid $USER:$GROUP \
        --exec /bin/sh -- -c "exec $DAEMON $DAEMON_ARGS 2>&1 | tee -a $LOGFILE"
    echo "$NAME started"
}

stop() {
    echo "Stopping $NAME"
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        # Find all child processes of the shell process
        PIDS="$PID $(pgrep -P $PID)"
        
        # Send SIGTERM to all processes
        for pid in $PIDS; do
            kill -TERM $pid 2>/dev/null
        done
        
        # Send SIGKILL to any remaining processes
        for pid in $PIDS; do
            kill -KILL $pid 2>/dev/null
        done
        
        rm -f $PIDFILE
    else
        echo "$PIDFILE not found, $NAME may not be running"
    fi
    echo "$NAME stopped"
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE) 2>/dev/null; then
            echo "Service is running"
        else
            echo "Service is stopped"
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
