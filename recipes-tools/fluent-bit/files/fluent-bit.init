#!/bin/sh
### BEGIN INIT INFO
# Provides:          fluent-bit
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Fluent Bit
# Description:       Fluent Bit is a Fast and Lightweight Log processor and forwarder
### END INIT INFO

NAME=td-agent-bit
DAEMON=/usr/bin/$NAME
CONFIG_FILE=/etc/td-agent-bit/td-agent-bit.conf
DAEMON_ARGS="-c $CONFIG_FILE"
PIDFILE=/var/run/$NAME.pid
LOGFILE=/tmp/$NAME.log
USER=fluentbit
GROUP=fluentbit

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

start() {
    echo "Starting $NAME"
    if [ ! -f "$CONFIG_FILE" ]; then
        echo "Error: Configuration file $CONFIG_FILE not found" >> $LOGFILE
        return 1
    fi
    start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PIDFILE --chuid $USER:$GROUP \
        --exec /bin/sh -- -c "exec $DAEMON $DAEMON_ARGS 2>&1 | tee -a $LOGFILE"
    echo "$NAME started. Log file: $LOGFILE"
}

stop() {
    echo "Stopping $NAME"
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
        # Find all child processes of the shell process
        PIDS="$PID $(pgrep -P $PID)"
        
        # Send SIGTERM to all processes
        for pid in $PIDS; do
            kill -TERM $pid 2>/dev/null
        done
        
        # Send SIGKILL to any remaining processes
        for pid in $PIDS; do
            kill -KILL $pid 2>/dev/null
        done
        
        rm -f $PIDFILE
    else
        echo "$PIDFILE not found, $NAME may not be running"
    fi
    echo "$NAME stopped"
}

status() {
    if [ -f $PIDFILE ]; then
        if kill -0 $(cat $PIDFILE) 2>/dev/null; then
            echo "$NAME is running"
            return 0
        else
            echo "$NAME is not running but pid file exists"
            return 1
        fi
    else
        echo "$NAME is not running"
        return 3
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|force-reload)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|status}"
        exit 1
        ;;
esac

exit 0
